# Job to initialize MinIO buckets and service accounts
apiVersion: batch/v1
kind: Job
metadata:
  name: minio-bucket-init
  labels:
    {{- include "minio.labels" . | nindent 4 }}
    app.kubernetes.io/component: bucket-init
spec:
  template:
    metadata:
      labels:
        {{- include "minio.labels" . | nindent 8 }}
        app.kubernetes.io/component: bucket-init
    spec:
      restartPolicy: OnFailure
      containers:
      - name: bucket-init
        image: quay.io/minio/mc:latest
        command:
        - /bin/sh
        - -c
        - |
          echo "üîß Initializing MinIO for Tempo trace storage..."
          
          # Wait for MinIO to be ready
          echo "‚è≥ Waiting for MinIO to be ready..."
          until mc alias set myminio http://{{ .Values.minio.service.name }}:{{ .Values.minio.service.ports.api }} {{ .Values.minio.secret.user }} {{ .Values.minio.secret.password }}; do
            echo "Waiting for MinIO..."
            sleep 5
          done
          echo "‚úÖ MinIO connection established"
          
          # Create Tempo bucket
          echo "üìÅ Creating Tempo bucket: {{ .Values.minio.tempo.bucketName }}"
          mc mb myminio/{{ .Values.minio.tempo.bucketName }} || echo "Bucket {{ .Values.minio.tempo.bucketName }} already exists"
          
          # Create Tempo service account
          echo "üë§ Creating Tempo service account..."
          if ! mc admin user svcacct list myminio {{ .Values.minio.tempo.credentials.user }} | grep -q "{{ .Values.minio.tempo.credentials.user }}"; then
            mc admin user svcacct add myminio {{ .Values.minio.tempo.credentials.user }} --access-key {{ .Values.minio.tempo.credentials.user }} --secret-key {{ .Values.minio.tempo.credentials.password }}
            echo "‚úÖ Tempo service account created"
          else
            echo "‚úÖ Tempo service account already exists"
          fi
          
          # Set bucket policy for Tempo
          echo "üîí Setting bucket policy for Tempo..."
          mc anonymous set download myminio/{{ .Values.minio.tempo.bucketName }} || true
          
          echo "üéâ MinIO initialization complete for Tempo!"
        env:
        - name: MINIO_ROOT_USER
          value: {{ .Values.minio.secret.user | quote }}
        - name: MINIO_ROOT_PASSWORD
          value: {{ .Values.minio.secret.password | quote }}
      backoffLimit: 3
